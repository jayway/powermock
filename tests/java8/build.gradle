List mockitoLibs = [
        project(":powermock-api:powermock-api-mockito2"), "org.mockito:mockito-core:${mockitoVersion}"
]

configure(project.subprojects) { subproject ->

    if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
        project.tasks.all { task -> task.enabled = false }
    }

    dependencies {
        testCompile("junit:junit:${junitVersion}") {
            exclude group: 'org.hamcrest', module: 'hamcrest-core'
        }
        testCompile("org.hamcrest:hamcrest-core:${hamcrestVersion}")
        testCompile("org.assertj:assertj-core:${assertjVersion}")

        testCompile files(project(":tests:mockito:junit4").sourceSets.test.output)
    }

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    compileTestJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

project(":tests:java8:mockito-junit4") {
    description = "Tests for Mockito module with JUnit 4.x. and Java8."

    dependencies {
        testCompile project(":powermock-modules:powermock-module-junit4")

        testCompile mockitoLibs
    }
}

project(":tests:java8:easymock-junit4") {
    description = "Tests for Easymock module with JUnit 4.x. and Java8."

    dependencies {
        testCompile project(":powermock-api:powermock-api-easymock")
        testCompile project(":powermock-modules:powermock-module-junit4")
        testCompile("org.easymock:easymock:${easymockVersion}")
        testCompile("org.assertj:assertj-core:${assertjVersion}")
        testCompile("org.hamcrest:hamcrest-core:${hamcrestVersion}")
    }
}

project(":tests:java8:mockito-junit4-agent") {
    description = "Tests for Mockito module with JUnit 4.x. and Java8."

    dependencies {
        testCompile mockitoLibs

        testCompile project(":powermock-modules:powermock-module-junit4-rule-agent")
    }

    def pathToAgent = project(":powermock-modules:powermock-module-javaagent").jar.outputs.files.getFiles().getAt(0)

    test {
        jvmArgs "-javaagent:${pathToAgent}"
    }
}

project(":tests:java8:mockito-junit4-rule-xstream") {
    description = "Tests for Mockito module with JUnit 4.x, Java8 and rules-xstream."

    dependencies {
        testCompile project(":powermock-modules:powermock-module-junit4-rule")
        testCompile project(":powermock-classloading:powermock-classloading-xstream")

        testCompile mockitoLibs

        testCompile files(project(":tests:mockito:junit4").sourceSets.test.output)
    }
}