shipkit {
    gitHub.repository = "powermock/powermock"

    gitHub.readOnlyAuthToken = "0f1df49ac11364f542c9d3e6735ae64d010ab8e3"

    git.user = "PowerMock Release Tools"
    git.email = "<powermock.release.tools@outlook.com>"
    git.releasableBranchRegex = "release/.+"  // 'release/2.x', 'release/3.x', etc.

    git.tagPrefix = "powermock-"

    // fix for IntelliJ Idea, because IDE does not read env properties from ${user.home}/.profile file on MacOS

    gitHub.writeAuthUser = System.getenv("GH_USER")
    gitHub.writeAuthToken = System.getenv("GH_WRITE_TOKEN")

    def buildNo = System.getenv("TRAVIS_BUILD_NUMBER")
    git.commitMessagePostfix = buildNo? "by CI build $buildNo\n\n[ci skip]" : "by local build\n\n[ci skip]"

    releaseNotes.file = "docs/release-notes/official.md"
    releaseNotes.labelMapping = [
            'epic': "Major changes",
            'bug': "Bugfixes",
            'enhancement': "Enhancements",
            'android': "Android support",
            'kotlin': "Kotlin support",
            'component:mockito': "Mockito support",
            'component:easymock': "EasyMock support",
            'component:junit': "jUnit support",
            'wiki': 'Documentation',
            'regression': 'Fix regression bug'
    ]
    releaseNotes.ignoreCommitsContaining = ["[ci skip]"]
}

boolean centralRelease = shouldReleaseToCentral(project)

String versionDescription = "PowerMock ${project.version} Final"
if (project.version.toString().contains("beta")){
    versionDescription = "PowerMock ${project.version} Beta"
}else if (project.version.toString().contains("RC")){
    versionDescription = "PowerMock ${project.version} Release Candidate"
}

allprojects {
    plugins.withId("org.shipkit.bintray") {
        bintray {
                user = System.getenv('BINTRAY_USER')
                key = System.getenv("BINTRAY_API_KEY")

                publish = true
                override = false

                pkg {
                    userOrg = 'powermock'
                    name = centralRelease ? "powermock" : "powermock-development"
                    desc = project.description

                    websiteUrl = 'http://powermock.org'
                    issueTrackerUrl = 'https://powermock.com/powermock/powermock/issues'
                    vcsUrl = 'https://github.com/powermock/powermock.git'

                    licenses = ['Apache-2.0']
                    labels = ['java', 'mock', 'mocking', 'tests']

                    publicDownloadNumbers = true

                    // optional version attributes
                    version {

                        name = "powermock-${project.version}"
                        released  = new Date()
                        desc = versionDescription
                        vcsTag = "powermock-${project.version}"

                        gpg {
                            sign = true
                        }

                        //Automatically syncs to central repository (https://oss.sonatype.org/)
                        mavenCentralSync {
                            sync = centralRelease
                            user = System.env.NEXUS_TOKEN_USER
                            password = System.env.NEXUS_TOKEN_PWD
                        }
                    }
                }
            }
        }
}


/**
 * Finds out if we should release to Maven Central.
 * To test this logic, run build with '-i' (info logging) and inspect the build output.
 */
static boolean shouldReleaseToCentral(project) {
    boolean centralReleaseByCommit = System.getenv("TRAVIS_COMMIT_MESSAGE")?.contains("[ci maven-central-release]")
    boolean centralReleaseByProjectProperty = project.hasProperty("mavenCentralSync") ? project.ext.mavenCentralSync : false

    boolean centralRelease = (centralReleaseByCommit || centralReleaseByProjectProperty)
    String message = """Release was using following settings:
 - commit message contains '[ci maven-central-release]': $centralReleaseByCommit
 - project property 'mavenCentralSync' has value: $centralReleaseByProjectProperty
 - Maven Central release is enabled: $centralRelease"""
    project.logger.info(message)

    return centralRelease
}